<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCEffectDFOutline.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCEffectDFOutline</TokenIdentifier>
			<Abstract type="html">CCEffectDFOutline create an outline around a sprite (combined with a distance field).</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
            
			
			<NodeRef refid="82"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFOutline/setFillColor:</TokenIdentifier>
			<Abstract type="html">Color of the sprite (pass a fillColor with with alpha value of 0.0 to see the actual sprite)</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *fillColor</Declaration>
			
			
			<Anchor>//api/name/fillColor</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFOutline/fillColor</TokenIdentifier>
			<Abstract type="html">Color of the sprite (pass a fillColor with with alpha value of 0.0 to see the actual sprite)</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *fillColor</Declaration>
			
			
			<Anchor>//api/name/fillColor</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectDFOutline/fillColor</TokenIdentifier>
			<Abstract type="html">Color of the sprite (pass a fillColor with with alpha value of 0.0 to see the actual sprite)</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *fillColor</Declaration>
			
			
			<Anchor>//api/name/fillColor</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFOutline/setOutlineColor:</TokenIdentifier>
			<Abstract type="html">Color of the outline</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *outlineColor</Declaration>
			
			
			<Anchor>//api/name/outlineColor</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFOutline/outlineColor</TokenIdentifier>
			<Abstract type="html">Color of the outline</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *outlineColor</Declaration>
			
			
			<Anchor>//api/name/outlineColor</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectDFOutline/outlineColor</TokenIdentifier>
			<Abstract type="html">Color of the outline</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *outlineColor</Declaration>
			
			
			<Anchor>//api/name/outlineColor</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFOutline/setOutlineWidth:</TokenIdentifier>
			<Abstract type="html">Outline width pixel width of the outline</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int outlineWidth</Declaration>
			
			
			<Anchor>//api/name/outlineWidth</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFOutline/outlineWidth</TokenIdentifier>
			<Abstract type="html">Outline width pixel width of the outline</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int outlineWidth</Declaration>
			
			
			<Anchor>//api/name/outlineWidth</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectDFOutline/outlineWidth</TokenIdentifier>
			<Abstract type="html">Outline width pixel width of the outline</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int outlineWidth</Declaration>
			
			
			<Anchor>//api/name/outlineWidth</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFOutline/init</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectDFOutline.</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>- (id)init</Declaration>
			
			<ReturnValue><Abstract type="html">The CCEffectDFOutline object.</Abstract></ReturnValue>
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFOutline/initWithOutlineColor:fillColor:outlineWidth:fieldScale:distanceField:</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectDFOutline object with the supplied parameters.</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>- (id)initWithOutlineColor:(CCColor *)outlineColor fillColor:(CCColor *)outlineColor outlineWidth:(int)outlineWidth fieldScale:(float)fieldScale distanceField:(CCTexture *)distanceField</Declaration>
			<Parameters>
				<Parameter>
					<Name>outlineColor</Name>
					<Abstract type="html">Color of the outline, a [CCColor blackColor] will result in an opaque black outline.</Abstract>
				</Parameter><Parameter>
					<Name>outlineWidth</Name>
					<Abstract type="html">pixel width of the outline.</Abstract>
				</Parameter><Parameter>
					<Name>fieldScale,</Name>
					<Abstract type="html">defined by the distance field generation proccess, for example a distance field that
was generated with a 4096/4096 input and output a 128/128 texture would have a fieldScale of 32 (
input size / output size). Note: this parameter could be automatically calculated if we assume that all
distance fields are generated from a 4096 input.</Abstract>
				</Parameter><Parameter>
					<Name>fillColor</Name>
					<Abstract type="html">Color of the fillColor, a [CCColor blackColor] will result in an opaque black fillColor.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectDFOutline object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithOutlineColor:fillColor:outlineWidth:fieldScale:distanceField:</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCEffectDFOutline/effectWithOutlineColor:fillColor:outlineWidth:fieldScale:distanceField:</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectDFOutline object with the supplied parameters.</Abstract>
			<DeclaredIn>CCEffectDFOutline.h</DeclaredIn>
			
			<Declaration>+ (id)effectWithOutlineColor:(CCColor *)outlineColor fillColor:(CCColor *)fillColor outlineWidth:(int)outlineWidth fieldScale:(float)fieldScale distanceField:(CCTexture *)distanceField</Declaration>
			<Parameters>
				<Parameter>
					<Name>outlineColor</Name>
					<Abstract type="html">Color of the outline, a [CCColor blackColor] will result in an opaque black outline.</Abstract>
				</Parameter><Parameter>
					<Name>fillColor</Name>
					<Abstract type="html">Color of the fillColor, a [CCColor blackColor] will result in an opaque black fillColor.</Abstract>
				</Parameter><Parameter>
					<Name>outlineWidth</Name>
					<Abstract type="html">pixel width of the outline.</Abstract>
				</Parameter><Parameter>
					<Name>fieldScale,</Name>
					<Abstract type="html">defined by the distance field generation proccess, for example a distance field that
was generated with a 4096/4096 input and output a 128/128 texture would have a fieldScale of 32 (
input size / output size). Note: this parameter could be automatically calculated if we assume that all
distance fields are generated from a 4096 input.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectDFOutline object.</Abstract></ReturnValue>
			<Anchor>//api/name/effectWithOutlineColor:fillColor:outlineWidth:fieldScale:distanceField:</Anchor>
            <NodeRef refid="82"/>
		</Token>
		
        
	</File>
</Tokens>