<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCEffectDFInnerGlow.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCEffectDFInnerGlow</TokenIdentifier>
			<Abstract type="html">CCEffectDFInnerGlow create an inner glow on any sprite (combined with a distance field).</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
            
			
			<NodeRef refid="81"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFInnerGlow/setFillColor:</TokenIdentifier>
			<Abstract type="html">Color of the sprite (pass a fillColor with with alpha value of 0.0 to see the actual sprite)</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *fillColor</Declaration>
			
			
			<Anchor>//api/name/fillColor</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFInnerGlow/fillColor</TokenIdentifier>
			<Abstract type="html">Color of the sprite (pass a fillColor with with alpha value of 0.0 to see the actual sprite)</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *fillColor</Declaration>
			
			
			<Anchor>//api/name/fillColor</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectDFInnerGlow/fillColor</TokenIdentifier>
			<Abstract type="html">Color of the sprite (pass a fillColor with with alpha value of 0.0 to see the actual sprite)</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *fillColor</Declaration>
			
			
			<Anchor>//api/name/fillColor</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFInnerGlow/setGlowColor:</TokenIdentifier>
			<Abstract type="html">Color of glow</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *glowColor</Declaration>
			
			
			<Anchor>//api/name/glowColor</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFInnerGlow/glowColor</TokenIdentifier>
			<Abstract type="html">Color of glow</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *glowColor</Declaration>
			
			
			<Anchor>//api/name/glowColor</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectDFInnerGlow/glowColor</TokenIdentifier>
			<Abstract type="html">Color of glow</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCColor *glowColor</Declaration>
			
			
			<Anchor>//api/name/glowColor</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFInnerGlow/setGlowWidth:</TokenIdentifier>
			<Abstract type="html">Outline width pixel width of the glow</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int glowWidth</Declaration>
			
			
			<Anchor>//api/name/glowWidth</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFInnerGlow/glowWidth</TokenIdentifier>
			<Abstract type="html">Outline width pixel width of the glow</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int glowWidth</Declaration>
			
			
			<Anchor>//api/name/glowWidth</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectDFInnerGlow/glowWidth</TokenIdentifier>
			<Abstract type="html">Outline width pixel width of the glow</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int glowWidth</Declaration>
			
			
			<Anchor>//api/name/glowWidth</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFInnerGlow/init</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectDFInnerGlow.</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>- (id)init</Declaration>
			
			<ReturnValue><Abstract type="html">The CCEffectDFInnerGlow object.</Abstract></ReturnValue>
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectDFInnerGlow/initWithGlowColor:fillColor:glowWidth:fieldScale:distanceField:</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectDFInnerGlow object with the supplied parameters.</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>- (id)initWithGlowColor:(CCColor *)glowColor fillColor:(CCColor *)fillColor glowWidth:(int)glowWidth fieldScale:(float)fieldScale distanceField:(CCTexture *)distanceField</Declaration>
			<Parameters>
				<Parameter>
					<Name>glowColor</Name>
					<Abstract type="html">Color of the glow, a [CCColor blackColor] will result in an opaque black glow.</Abstract>
				</Parameter><Parameter>
					<Name>fillColor</Name>
					<Abstract type="html">Color of the fillColor, a [CCColor blackColor] will result in an opaque black fillColor.</Abstract>
				</Parameter><Parameter>
					<Name>glowWidth</Name>
					<Abstract type="html">pixel width of the glow.</Abstract>
				</Parameter><Parameter>
					<Name>fieldScale,</Name>
					<Abstract type="html">defined by the distance field generation proccess, for example a distance field that
was generated with a 4096/4096 input and output a 128/128 texture would have a fieldScale of 32 (
input size / output size). Note: this parameter could be automatically calculated if we assume that all
distance fields are generated from a 4096 input.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectDFInnerGlow object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithGlowColor:fillColor:glowWidth:fieldScale:distanceField:</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCEffectDFInnerGlow/effectWithGlowColor:fillColor:glowWidth:fieldScale:distanceField:</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectDFInnerGlow object with the supplied parameters.</Abstract>
			<DeclaredIn>CCEffectDFInnerGlow.h</DeclaredIn>
			
			<Declaration>+ (id)effectWithGlowColor:(CCColor *)glowColor fillColor:(CCColor *)fillColor glowWidth:(int)glowWidth fieldScale:(float)fieldScale distanceField:(CCTexture *)distanceField</Declaration>
			<Parameters>
				<Parameter>
					<Name>glowColor</Name>
					<Abstract type="html">Color of the glow, a [CCColor blackColor] will result in an opaque black glow.</Abstract>
				</Parameter><Parameter>
					<Name>fillColor</Name>
					<Abstract type="html">Color of the fillColor, a [CCColor blackColor] will result in an opaque black fillColor.</Abstract>
				</Parameter><Parameter>
					<Name>glowWidth</Name>
					<Abstract type="html">pixel width of the glow.</Abstract>
				</Parameter><Parameter>
					<Name>fieldScale,</Name>
					<Abstract type="html">defined by the distance field generation proccess, for example a distance field that
was generated with a 4096/4096 input and output a 128/128 texture would have a fieldScale of 32 (
input size / output size). Note: this parameter could be automatically calculated if we assume that all
distance fields are generated from a 4096 input.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectDFInnerGlow object.</Abstract></ReturnValue>
			<Anchor>//api/name/effectWithGlowColor:fillColor:glowWidth:fieldScale:distanceField:</Anchor>
            <NodeRef refid="81"/>
		</Token>
		
        
	</File>
</Tokens>