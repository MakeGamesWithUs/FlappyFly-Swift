<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCPackage.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCPackage</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
            
			
			<NodeRef refid="108"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setName:</TokenIdentifier>
			<Abstract type="html">Name of the package</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/name</TokenIdentifier>
			<Abstract type="html">Name of the package</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/name</TokenIdentifier>
			<Abstract type="html">Name of the package</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setResolution:</TokenIdentifier>
			<Abstract type="html">Resolution of the package, e.g. tablethd, phonehd, etc.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *resolution</Declaration>
			
			
			<Anchor>//api/name/resolution</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/resolution</TokenIdentifier>
			<Abstract type="html">Resolution of the package, e.g. tablethd, phonehd, etc.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *resolution</Declaration>
			
			
			<Anchor>//api/name/resolution</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/resolution</TokenIdentifier>
			<Abstract type="html">Resolution of the package, e.g. tablethd, phonehd, etc.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *resolution</Declaration>
			
			
			<Anchor>//api/name/resolution</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setOs:</TokenIdentifier>
			<Abstract type="html">OS of the package e.g. iOS, Android, Mac</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *os</Declaration>
			
			
			<Anchor>//api/name/os</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/os</TokenIdentifier>
			<Abstract type="html">OS of the package e.g. iOS, Android, Mac</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *os</Declaration>
			
			
			<Anchor>//api/name/os</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/os</TokenIdentifier>
			<Abstract type="html">OS of the package e.g. iOS, Android, Mac</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *os</Declaration>
			
			
			<Anchor>//api/name/os</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setRemoteURL:</TokenIdentifier>
			<Abstract type="html">The remote URL of the package</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *remoteURL</Declaration>
			
			
			<Anchor>//api/name/remoteURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/remoteURL</TokenIdentifier>
			<Abstract type="html">The remote URL of the package</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *remoteURL</Declaration>
			
			
			<Anchor>//api/name/remoteURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/remoteURL</TokenIdentifier>
			<Abstract type="html">The remote URL of the package</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *remoteURL</Declaration>
			
			
			<Anchor>//api/name/remoteURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setInstallURL:</TokenIdentifier>
			<Abstract type="html">The local URL where the package is installed. This value will be initially nil and set only if installation was successful.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *installURL</Declaration>
			
			
			<Anchor>//api/name/installURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/installURL</TokenIdentifier>
			<Abstract type="html">The local URL where the package is installed. This value will be initially nil and set only if installation was successful.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *installURL</Declaration>
			
			
			<Anchor>//api/name/installURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/installURL</TokenIdentifier>
			<Abstract type="html">The local URL where the package is installed. This value will be initially nil and set only if installation was successful.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *installURL</Declaration>
			
			
			<Anchor>//api/name/installURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setLocalDownloadURL:</TokenIdentifier>
			<Abstract type="html">Local URL of the download file when download finishes. While downloading a temp name
is used which won&apos;t be accessible.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *localDownloadURL</Declaration>
			
			
			<Anchor>//api/name/localDownloadURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/localDownloadURL</TokenIdentifier>
			<Abstract type="html">Local URL of the download file when download finishes. While downloading a temp name
is used which won&apos;t be accessible.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *localDownloadURL</Declaration>
			
			
			<Anchor>//api/name/localDownloadURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/localDownloadURL</TokenIdentifier>
			<Abstract type="html">Local URL of the download file when download finishes. While downloading a temp name
is used which won&apos;t be accessible.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *localDownloadURL</Declaration>
			
			
			<Anchor>//api/name/localDownloadURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setUnzipURL:</TokenIdentifier>
			<Abstract type="html">Local URL of the folder the package is unzipped to</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *unzipURL</Declaration>
			
			
			<Anchor>//api/name/unzipURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/unzipURL</TokenIdentifier>
			<Abstract type="html">Local URL of the folder the package is unzipped to</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *unzipURL</Declaration>
			
			
			<Anchor>//api/name/unzipURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/unzipURL</TokenIdentifier>
			<Abstract type="html">Local URL of the folder the package is unzipped to</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *unzipURL</Declaration>
			
			
			<Anchor>//api/name/unzipURL</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setFolderName:</TokenIdentifier>
			<Abstract type="html">Name of the folder inside the unzip folder. A zipped package is supposed to contain a folder named
like this &lt;NAME&gt;-&lt;OS&gt;-&lt;RESOLUTION&gt;. Example: DLC-iOS-phonehd.
This name can vary though and can be determined by delegation if a standard name was not found
during installation.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *folderName</Declaration>
			
			
			<Anchor>//api/name/folderName</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/folderName</TokenIdentifier>
			<Abstract type="html">Name of the folder inside the unzip folder. A zipped package is supposed to contain a folder named
like this &lt;NAME&gt;-&lt;OS&gt;-&lt;RESOLUTION&gt;. Example: DLC-iOS-phonehd.
This name can vary though and can be determined by delegation if a standard name was not found
during installation.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *folderName</Declaration>
			
			
			<Anchor>//api/name/folderName</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/folderName</TokenIdentifier>
			<Abstract type="html">Name of the folder inside the unzip folder. A zipped package is supposed to contain a folder named
like this &lt;NAME&gt;-&lt;OS&gt;-&lt;RESOLUTION&gt;. Example: DLC-iOS-phonehd.
This name can vary though and can be determined by delegation if a standard name was not found
during installation.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *folderName</Declaration>
			
			
			<Anchor>//api/name/folderName</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setEnableOnDownload:</TokenIdentifier>
			<Abstract type="html">Whether or not the the package should be enabled in cocos2d after installation.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL enableOnDownload</Declaration>
			
			
			<Anchor>//api/name/enableOnDownload</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/enableOnDownload</TokenIdentifier>
			<Abstract type="html">Whether or not the the package should be enabled in cocos2d after installation.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL enableOnDownload</Declaration>
			
			
			<Anchor>//api/name/enableOnDownload</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/enableOnDownload</TokenIdentifier>
			<Abstract type="html">Whether or not the the package should be enabled in cocos2d after installation.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL enableOnDownload</Declaration>
			
			
			<Anchor>//api/name/enableOnDownload</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/setStatus:</TokenIdentifier>
			<Abstract type="html">The current status of the package</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CCPackageStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/status</TokenIdentifier>
			<Abstract type="html">The current status of the package</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CCPackageStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPackage/status</TokenIdentifier>
			<Abstract type="html">The current status of the package</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CCPackageStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/initWithName:remoteURL:</TokenIdentifier>
			<Abstract type="html">Creates a new instance of a package.
OS and resolution are determined implicitly. Resolution is derived from CCFileUtils&apos; searchResolutionsOrder first entry.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithName:(NSString *)name remoteURL:(NSURL *)remoteURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">Name of the package</Abstract>
				</Parameter><Parameter>
					<Name>remoteURL</Name>
					<Abstract type="html">Remote URL of the package</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">New instance of CCPackage</Abstract></ReturnValue>
			<Anchor>//api/name/initWithName:remoteURL:</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/initWithName:resolution:remoteURL:</TokenIdentifier>
			<Abstract type="html">Creates a new instance of a package.
OS is determined implicitly.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithName:(NSString *)name resolution:(NSString *)resolution remoteURL:(NSURL *)remoteURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">Name of the package</Abstract>
				</Parameter><Parameter>
					<Name>resolution</Name>
					<Abstract type="html">Resolution of the package</Abstract>
				</Parameter><Parameter>
					<Name>remoteURL</Name>
					<Abstract type="html">Remote URL of the package</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">New instance of CCPackage</Abstract></ReturnValue>
			<Anchor>//api/name/initWithName:resolution:remoteURL:</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/initWithName:resolution:os:remoteURL:</TokenIdentifier>
			<Abstract type="html">Creates a new instance of a package.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithName:(NSString *)name resolution:(NSString *)resolution os:(NSString *)os remoteURL:(NSURL *)remoteURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">Name of the package</Abstract>
				</Parameter><Parameter>
					<Name>resolution</Name>
					<Abstract type="html">Resolution of the package</Abstract>
				</Parameter><Parameter>
					<Name>os</Name>
					<Abstract type="html">OS of the package, usally determined internally</Abstract>
				</Parameter><Parameter>
					<Name>remoteURL</Name>
					<Abstract type="html">Remote URL of the package</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">New instance of CCPackage</Abstract></ReturnValue>
			<Anchor>//api/name/initWithName:resolution:os:remoteURL:</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/initWithDictionary:</TokenIdentifier>
			<Abstract type="html">Creates a new instance of a package populated with the contents of the dictionary.
Used in context of serialization.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithDictionary:(NSDictionary *)dictionary</Declaration>
			<Parameters>
				<Parameter>
					<Name>dictionary</Name>
					<Abstract type="html">Dictionary containing values to populate the package with.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">New instance of CCPackage</Abstract></ReturnValue>
			<Anchor>//api/name/initWithDictionary:</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/toDictionary</TokenIdentifier>
			<Abstract type="html">Returns a dictionary containing the values of the package&apos;s properties.
Used in context of serialization.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>- (NSDictionary *)toDictionary</Declaration>
			
			<ReturnValue><Abstract type="html">A dictionary containing the values of the package</Abstract></ReturnValue>
			<Anchor>//api/name/toDictionary</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/standardIdentifier</TokenIdentifier>
			<Abstract type="html">Returns an identifier of the package: The pattern is &lt;NAME&gt;-&lt;OS&gt;-&lt;RESOLUTION&gt;. Example: DLC-iOS-phonehd.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>- (NSString *)standardIdentifier</Declaration>
			
			<ReturnValue><Abstract type="html">A dictionary containing the values of the package</Abstract></ReturnValue>
			<Anchor>//api/name/standardIdentifier</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPackage/statusToString</TokenIdentifier>
			<Abstract type="html">Returns the status as a string.
Debugging purposes.</Abstract>
			<DeclaredIn>CCPackage.h</DeclaredIn>
			
			<Declaration>- (NSString *)statusToString</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of the status property</Abstract></ReturnValue>
			<Anchor>//api/name/statusToString</Anchor>
            <NodeRef refid="108"/>
		</Token>
		
        
	</File>
</Tokens>